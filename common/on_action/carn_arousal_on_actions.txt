# Increase stress every year
yearly_playable_pulse = {
	events = {
		carn_arousal.0001
	}
}

quarterly_playable_pulse = {
	on_actions = {
		start_arousal_tracking_pulse
	}
}

# Check every quarter if arousal tracking should start (player only)
# Would be cleaner to catch character switch events directly
start_arousal_tracking_pulse = {
	trigger = {
		is_ai = no
		is_adult = yes
		NOT = { has_character_flag = carn_track_arousal_periodically }
		has_game_rule = carn_arousal_passive_gain_enabled
	}
	effect = {		
		add_character_flag = carn_track_arousal_periodically # To prevent from applying this event more than once
		trigger_event = {
			id = carn_arousal.0002
			days = 1
		}
	}
}

# Triggered when arousal level goes down
# Root is the character
on_arousal_level_reduced = {
	effect = {
		send_interface_toast = {
			type = carn_msg_lost_arousal_level
			left_icon = root
		}
	}
}

# Going to a new arousal level will fire this.
on_arousal_level_1 = {
	trigger = {
		NOT = { has_character_flag = recently_hit_arousal_threshold } # Prevents multiple mental breaks from occuring on the same day (causes errors and creates an unbreakable stress loop).
	}
	events = {
		# For modders
	}
	effect = {
		send_interface_toast = {
			type = carn_msg_gained_arousal_level
			left_icon = root
		}
	}
}

# Going to a new arousal level will fire this.
on_arousal_level_2 = {
	trigger = {
		NOT = { has_character_flag = recently_hit_arousal_threshold } # Prevents multiple mental breaks from occuring on the same day (causes errors and creates an unbreakable stress loop).
	}
	events = {
		# For modders
	}
	effect = {
		send_interface_toast = {
			type = carn_msg_gained_arousal_level
			left_icon = root
		}
	}
}

# Going to a new arousal level will fire this.
on_arousal_level_3 = {
	trigger = {
		NOT = { has_character_flag = recently_hit_arousal_threshold } # Prevents multiple mental breaks from occuring on the same day (causes errors and creates an unbreakable stress loop).
	}
	events = {
		# For modders
	}
	effect = {
		send_interface_toast = {
			type = carn_msg_gained_arousal_level
			left_icon = root
		}
	}
}