namespace = carn_sex_scene

#################################################################################
# 0001. PDX sex scene implementation
# 0002. PDX sex scene implementation (fallback, located in a different file)
# 0003. Example noncon scene (giving) for defile prisoner interaction
# 0004. Example noncon scene (receiving) for defile prisoner interaction
#
# This is an example of how to define a sex scene event for Carnalitas.
# The localization is from the vanilla CK3 event "seduce_outcome.2309"
#
# scope:carn_sex_player ------ The PLAYER (the one receiving the event)
# scope:carn_sex_target ------ The TARGET (the one the player is having sex with)
#
# Remember to add your sex scene to the carn_sex_scene on_action, or it won't appear!
#################################################################################

carn_sex_scene.0001 = {
	type = character_event
	title = carn_sex_scene.0001.t
	desc = {
		desc = carn_sex_scene.0001.desc_opening
		desc = carn_sex_scene.0001.desc_ending
	}
	
	theme = seduce_scheme
	left_portrait = {
		character = scope:carn_sex_target
		animation = flirtation_left
	}

	trigger = {

		##########################################################################
		# Use triggers to list flags for your sex scene. See scripted_triggers/carn_sex_scene_triggers.txt for a list of triggers.
		##########################################################################

		carn_sex_scene_is_consensual = yes

		##########################################################################
		# Once you are done listing flags, make sure you include this trigger
		##########################################################################

		carn_sex_scene_matches_requested_flags_trigger = yes

		##########################################################################
		# Finally, you should check anything else that is relevant for the event.
		# For example, if your event is from the perspective of a male character penetrating a female target, you should make sure that scope:carn_sex_player is male and scope:carn_sex_target is female.
		##########################################################################
	}

	immediate = {

		##########################################################################
		# Copy and paste the flags for your event in the immediate block as well.
		# This will let carn_on_sex events firing from this event know what flags it had.
		##########################################################################

		carn_sex_scene_is_consensual = yes

		##########################################################################
		# Don't forget to include carn_had_sex_with_effect
		# pregnancy_chance can be changed to any value between 0 and 100
		# DO NOT CHANGE THE OTHER VARIABLES
		##########################################################################
		
		scope:carn_sex_player  = {
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:carn_sex_player
				CHARACTER_2 = scope:carn_sex_target
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = scope:carn_sex_stress_effects
				DRAMA = scope:carn_sex_drama
			}
		}

		##########################################################################
		# carn_had_sex_with_effect will trigger the on_action "carn_on_sex," where you can add events to fire.
		# To check the flags of the sex scene, you can use triggers such as "carn_sex_scene_was_vaginal = yes"
		##########################################################################
	}

	option = {
		name = carn_sex_scene.0001.a
	}
}

##########################################################################
# Below are two scripted effects that are local to this file.
# These kinds of scripted effects can be used for specific functionality that does not need to be used in other events outside this file.
#
# This one will undress a character, or set a variable if they were already naked.
##########################################################################
scripted_effect carn_sex_scene_undress_character_effect = {
	if = {
		limit = {
			NOT = { has_character_flag = is_naked }
		}
		add_character_flag = {
			flag = is_naked
			days = 180 # So character won't stay naked forever when something goes wrong
		}
	}
	else = {
		# A local variable will be automatically removed after the event chain has been completed.
		set_local_variable = {
			name = character_was_already_naked
			value = yes
		}
	}
}

##########################################################################
# This one will dress a character back up, but only if they weren't already naked before the event.
##########################################################################
scripted_effect carn_sex_scene_dress_character_effect = {
	if = {
		limit = {
			NOT = { exists = local_var:character_was_already_naked }
		}
		remove_character_flag = is_naked
	}
}

##########################################################################
# Example noncon scene (giving)
##########################################################################
carn_sex_scene.0003 = {
	type = character_event
	title = carn_sex_scene.0003.t
	desc = {
		desc = carn_sex_scene.0003.desc_opening
		desc = carn_sex_scene.0003.desc_ending
	}
	
	theme = prison
	left_portrait = {
		character = scope:carn_sex_player
		animation = schadenfreude
	}
	right_portrait = {
		character = scope:carn_sex_target
		animation = prisondungeon
	}

	trigger = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_giving_player = yes

		carn_sex_scene_matches_requested_flags_trigger = yes

		scope:carn_sex_target = {
			is_imprisoned_by = scope:carn_sex_player
		}
	}

	immediate = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_giving_player = yes

		scope:carn_sex_target = {
			carn_sex_scene_undress_character_effect = yes
		}

		scope:carn_sex_player = {
			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:carn_sex_player
				CHARACTER_2 = scope:carn_sex_target
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = scope:carn_sex_stress_effects
				DRAMA = scope:carn_sex_drama
			}
		}
	}

	option = {
		name = carn_sex_scene.0003.a
	}

	after = {
		scope:carn_sex_target = {
			carn_sex_scene_dress_character_effect = yes
		}
	}
}

##########################################################################
# Example noncon scene (receiving)
##########################################################################
carn_sex_scene.0004 = {
	type = character_event
	title = carn_sex_scene.0004.t
	desc = {
		desc = carn_sex_scene.0004.desc_opening
		desc = carn_sex_scene.0004.desc_ending
	}
	
	theme = prison
	left_portrait = {
		character = scope:carn_sex_player
		animation = prisondungeon
	}
	right_portrait = {
		character = scope:carn_sex_target
		animation = schadenfreude
	}

	trigger = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_receiving_player = yes

		carn_sex_scene_matches_requested_flags_trigger = yes

		scope:carn_sex_player = {
			is_imprisoned_by = scope:carn_sex_target
		}
	}

	immediate = {
		carn_sex_scene_is_noncon = yes
		carn_sex_scene_is_receiving_player = yes

		scope:carn_sex_player = {
			carn_sex_scene_undress_character_effect = yes

			carn_had_sex_with_effect = {
				CHARACTER_1 = scope:carn_sex_player
				CHARACTER_2 = scope:carn_sex_target
				C1_PREGNANCY_CHANCE = pregnancy_chance
				C2_PREGNANCY_CHANCE = pregnancy_chance
				STRESS_EFFECTS = no # Rape shouldn't give stress loss for character being raped
				DRAMA = scope:carn_sex_drama
			}

			stress_impact = {
				base = medium_stress_impact_gain
				lustful = minor_stress_impact_loss # This still gives a net stress gain
				chaste = minor_stress_impact_gain
				celibate = minor_stress_impact_gain
			}
		}
	}

	option = {
		name = carn_sex_scene.0004.a
	}

	after = {
		scope:carn_sex_player = {
			carn_sex_scene_dress_character_effect = yes
		}
	}
}
